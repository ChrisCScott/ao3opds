DROP TABLE IF EXISTS user;
DROP TABLE IF EXISTS ao3;
DROP TABLE IF EXISTS feed;

CREATE TABLE user (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  username TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE ao3 (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  user_id TEXT NOT NULL,
  username TEXT UNIQUE NOT NULL,
  password TEXT NOT NULL,
  session BLOB,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES user (id),
  UNIQUE (user_id)
);

CREATE TABLE feed (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  ao3_id INTEGER NOT NULL,
  feed_type TEXT NOT NULL,
  share_key TEXT UNIQUE NOT NULL DEFAULT (lower(hex(randomblob(16)))),
  share_enabled INTEGER NOT NULL DEFAULT 0,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (ao3_id) REFERENCES ao3 (id),
  UNIQUE (ao3_id, feed_type)
);

CREATE TABLE category (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  term TEXT NOT NULL,
  scheme TEXT,
  label TEXT,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE work (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  work_id INTEGER NOT NULL,
  title TEXT NOT NULL,
  work_updated TIMESTAMP NOT NULL,
  rights TEXT,
  work_language TEXT,
  publisher TEXT,
  summary TEXT,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE feed_entry (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  feed_id INTEGER NOT NULL,
  work_id INTEGER NOT NULL,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (feed_id) REFERENCES feed (id),
  FOREIGN KEY (work_id) REFERENCES work (id),
  UNIQUE (feed_id, work_id)
);

CREATE TABLE author (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT NOT NULL,
  email TEXT,
  uri TEXT,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  UNIQUE name
);

CREATE TABLE work_author (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  work_id INTEGER NOT NULL,
  author_id INTEGER NOT NULL,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (work_id) REFERENCES work (id),
  FOREIGN KEY (author_id) REFERENCES author (id),
  UNIQUE (work_id, author_id)
)

CREATE TABLE work_category (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  work_id INTEGER NOT NULL,
  category_id INTEGER NOT NULL,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (work_id) REFERENCES work (id),
  FOREIGN KEY (category_id) REFERENCES category (id),
  UNIQUE (work_id, category_id)
)

CREATE TABLE link (
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  work_id INTEGER NOT NULL,
  href TEXT NOT NULL,
  rel TEXT,
  link_type TEXT,
  updated TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (work_id) REFERENCES work (id)
)
